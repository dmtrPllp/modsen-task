// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int           @id @default(autoincrement())
  email    String        @unique
  password String
  meetings UserMeeting[]
  role     Role          @relation(fields: [roleId], references: [id])
  roleId   Int           @default(1) @map("role_id")
  session  Session?

  @@map("users")
}

model Session {
  user         User   @relation(fields: [userId], references: [id])
  userId       Int    @unique @map("user_id")
  refreshToken String @map("refresh_token")

  @@map("sessions")
}

model Role {
  id          Int          @id @default(autoincrement())
  title       String
  permissions Permission[]
  users       User[]

  @@map(name: "roles")
}

model Permission {
  id         Int    @id @default(autoincrement())
  descriptor String
  method     Method
  role       Role   @relation(fields: [roleId], references: [id])
  roleId     Int    @map("role_id")

  @@map("permissions")
}

enum Method {
  GET
  POST
  DELETE
  PUT
  PATCH
}

model Meeting {
  id          Int           @id @default(autoincrement())
  title       String
  description String
  tags        String[]
  startDate   DateTime      @map("start_date")
  location    String
  createdBy   Int?          @map("created_by")
  users       UserMeeting[]

  @@map("meetings")
}

model UserMeeting {
  user      User    @relation(fields: [userId], references: [id])
  userId    Int     @map("user_id")
  meeting   Meeting @relation(fields: [meetingId], references: [id])
  meetingId Int     @map("meeting_id")

  @@id([userId, meetingId])
  @@map("user_meetings")
}
